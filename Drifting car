import pygame
import random

# Initialize Pygame
pygame.init()

# Set the window dimensions
WIDTH = 800
HEIGHT = 600

# Set the window caption
pygame.display.set_caption("Supra MK4 Drifting Game")

# Create the game window
screen = pygame.display.set_mode((WIDTH, HEIGHT))

# Load the car image
car_image = pygame.image.load("supra.png").convert_alpha()

# Set the car dimensions
CAR_WIDTH = 80
CAR_HEIGHT = 160

# Set the car initial position
car_x = WIDTH / 2 - CAR_WIDTH / 2
car_y = HEIGHT - CAR_HEIGHT - 20

# Set the car speed
car_speed = 10

# Load the background image
background_image = pygame.image.load("background.png").convert()

# Set the background scrolling speed
background_scroll_speed = 2

# Load the drift sound effect
drift_sound = pygame.mixer.Sound("drift.wav")

# Initialize the score
score = 0

# Initialize the game clock
clock = pygame.time.Clock()

# Define the function to draw the car
def draw_car():
    screen.blit(car_image, (car_x, car_y))

# Define the function to draw the score
def draw_score():
    font = pygame.font.Font(None, 36)
    text = font.render("Score: " + str(score), True, (255, 255, 255))
    screen.blit(text, (10, 10))

# Define the function to generate a new obstacle
def new_obstacle():
    obstacle_width = random.randint(80, 200)
    obstacle_height = 40
    obstacle_x = random.randint(0, WIDTH - obstacle_width)
    obstacle_y = -obstacle_height
    obstacle_speed = random.randint(3, 10)
    return (obstacle_x, obstacle_y, obstacle_width, obstacle_height, obstacle_speed)

# Initialize the list of obstacles
obstacles = []

# Set the obstacle generation interval
obstacle_interval = 1000
obstacle_timer = pygame.time.get_ticks()

# Game loop
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    # Handle input
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and car_x > 0:
        car_x -= car_speed
    if keys[pygame.K_RIGHT] and car_x < WIDTH - CAR_WIDTH:
        car_x += car_speed
    
    # Scroll the background
    background_y = (pygame.time.get_ticks() // background
background_y = (pygame.time.get_ticks() // background_scroll_speed) % HEIGHT
screen.blit(background_image, (0, background_y - HEIGHT))
screen.blit(background_image, (0, background_y))

# Generate a new obstacle
if pygame.time.get_ticks() - obstacle_timer > obstacle_interval:
    obstacles.append(new_obstacle())
    obstacle_timer = pygame.time.get_ticks()

# Move and draw the obstacles
for obstacle in obstacles:
    obstacle_x, obstacle_y, obstacle_width, obstacle_height, obstacle_speed = obstacle
    obstacle_y += obstacle_speed
    pygame.draw.rect(screen, (255, 0, 0), (obstacle_x, obstacle_y, obstacle_width, obstacle_height))
    if obstacle_y > HEIGHT:
        obstacles.remove(obstacle)
        score += 1
        drift_sound.play()

# Draw the car and the score
draw_car()
draw_score()

# Update the screen
pygame.display.flip()

# Set the game FPS
clock.tick(60)
